"da39a3ee5e6b4b0d3255bfef95601890afd80709"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#8=[nil nil ((#("int main(int argc, char *argv[])
{
  if (condition) {
    
  }
  return 0;
}
" 0 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face) 3 4 (fontified t) 4 8 (fontified t face font-lock-function-name-face) 8 9 (fontified t c-type c-decl-arg-start) 9 12 (fontified t face font-lock-type-face) 12 13 (fontified t) 13 17 (fontified t face font-lock-variable-name-face) 17 18 (fontified t c-type c-decl-arg-start) 18 19 (fontified t) 19 23 (fontified t face font-lock-type-face) 23 25 (fontified t) 25 29 (fontified t face font-lock-variable-name-face) 29 35 (fontified t) 35 37 (fontified t) 37 39 (fontified t face font-lock-keyword-face) 39 62 (fontified t) 62 63 (fontified t) 63 65 (fontified t) 65 71 (fontified t face font-lock-keyword-face) 71 77 (fontified t)) . 1) (undo-tree-id0 . -77) (undo-tree-id1 . -33) (undo-tree-id2 . -33) (undo-tree-id3 . -35) (undo-tree-id4 . -35) (undo-tree-id5 . -59) (undo-tree-id6 . -59) (undo-tree-id7 . -54) (undo-tree-id8 . -54) (undo-tree-id9 . -63) (undo-tree-id10 . -63) (undo-tree-id11 . -75) (undo-tree-id12 . -75) (undo-tree-id13 . -41) (undo-tree-id14 . -50) (undo-tree-id15 . -13) (undo-tree-id16 . -17) (undo-tree-id17 . -25) (undo-tree-id18 . -29) (undo-tree-id19 . -77) (undo-tree-id20 . -77) (apply yas--snippet-revive 38 63 #4=[cl-struct-yas--snippet nil (#3=[cl-struct-yas--field 1 42 51 nil nil nil nil #1=[cl-struct-yas--field 2 53 63 nil nil nil nil #2=[cl-struct-yas--exit 59 nil]]] #1#) #2# 1 nil #3# nil nil])) nil (23248 38741 52022 296000) 0 nil]) ((apply yas--take-care-of-redo #4#) (60 . 62) (38 . 61) (#("if" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face)) . 38) (undo-tree-id21 . -2) 40) nil (23248 38741 52073 234000) 0 nil]) ((38 . 40) (apply yas--snippet-revive 1 53 #7=[cl-struct-yas--snippet nil (#6=[cl-struct-yas--field 1 10 32 nil nil nil nil #5=[cl-struct-yas--exit 38 nil]]) #5# 0 nil #6# nil nil])) nil (23248 38741 52090 215000) 0 nil]) ((apply yas--take-care-of-redo #7#) (39 . 41) (#("    " 0 4 (fontified nil)) . -39) (36 . 38) (#("    " 0 4 (fontified nil)) . -36) (1 . 57) (#("main" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 1) (undo-tree-id22 . -4) 5) nil (23248 38741 52123 769000) 0 nil]) ((1 . 5)) nil (23248 38741 52141 733000) 0 nil]) ((#("i" 0 1 (fontified t)) . -1) (undo-tree-id23 . -1) (#("n" 0 1 (fontified t)) . -2) (undo-tree-id24 . -1) (#("t" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -3) (undo-tree-id25 . -1) 4) nil (23248 38741 52179 25000) 0 nil]) ((1 . 4)) nil (23248 38741 52195 105000) 0 nil]) ((#("i" 0 1 (fontified t)) . -1) (undo-tree-id26 . -1) (#("n" 0 1 (fontified t)) . -2) (undo-tree-id27 . -1) (#("t" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -3) (undo-tree-id28 . -1) 4) nil (23248 38741 52232 128000) 0 nil]) ((1 . 4) (t . -1)) nil (23248 38741 52250 489000) 0 nil]) nil nil (23248 38741 52257 216000) 0 nil] #8# 561 9 nil]