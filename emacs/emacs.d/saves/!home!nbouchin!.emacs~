;;; Package --- Summary.
(require 'package)
;;; Commentary:
(add-to-list 'package-archives '("gnu" . "https://elpa.gnu.org/packages/") t)
(add-to-list 'package-archives '("melpa" . "https://melpa.milkbox.net/packages/") t)
(add-to-list 'package-archives '("marmalade" . "https://marmalade-repo.org/packages/") t)

;;; Code:
(package-initialize)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   (quote
    ("e11569fd7e31321a33358ee4b232c2d3cf05caccd90f896e1df6cab228191109" default)))
 '(package-selected-packages
   (quote
    (dired-hide-dotfiles helm git-gutter zenburn-theme yasnippet-snippets yasnippet company-quickhelp company-jedi flycheck))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:background "dark")))))

;; Set colorscheme.
(load-theme 'zenburn)

;; Enable mouse support.
(xterm-mouse-mode 1)

;; Set emacs swap files location.
(setq backup-directory-alist `(("." . "~/.emacs.d/saves")))

;; Enable emacs flycheck.
(global-flycheck-mode)

;; Enable nlinum mode.
(defvar linum-format)

(global-linum-mode )1
(setq  linum-format "%d "); Set plus bar.

;; Enable git-gutter
(global-git-gutter-mode)

;; Company mode configuration.
(defvar company-backends)
(defvar company-quickhelp-frontend)

(add-hook 'after-init-hook 'global-company-mode)
(company-quickhelp-mode 1); ctrl-h for company-help.

(defun my/python-mode-hook () "Load python jedi."
       (add-to-list 'company-backends 'company-jedi)); use of jedi for company completion.

(add-hook 'python-mode-hook 'my/python-mode-hook)
(add-hook 'python-mode-hook 'run-python-internal)

;; Load and enable yasnippets.
(require 'yasnippet)
(yas-global-mode 1)

(provide 'emacs)
;;; .emacs ends here
