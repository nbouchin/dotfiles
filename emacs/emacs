;;; PACKAGE-ARCHIVES --- Summary.
;;; Commentary:
(require 'package)

(add-to-list 'package-archives '("gnu" . "https://elpa.gnu.org/packages/") t)
(add-to-list 'package-archives '("melpa" . "https://melpa.milkbox.net/packages/") t)

;;; Code:
(package-initialize)

;; Install all packages.
(defun my-install ()
  "My-install searchg all packages in package-list and install them if not installed."
  (interactive)
  (defvar package-list)
  (setq package-list '(gruvbox-theme smart-mode-line nyan-mode nasm-mode evil-leader key-chord org-evil evil rudel tabbar transpose-frame autopair git-gutter-fringe
								   auto-complete auto-complete-c-headers auto-complete-clang magit dired-sidebar iedit helm yasnippet-snippets yasnippet flycheck ace-jump-mode undo-tree))
  ;; fetch the list of packages available.
  (unless package-archive-contents
	(package-refresh-contents))
  ;; install the missing packages.
  (dolist (package package-list)
	(unless (package-installed-p package)
	  (package-install package)))
  )

;; Byte compile config.
(defun my-recompile ()
  "My-recompile byte-compile all configuration."
  (interactive)
  (byte-recompile-directory (expand-file-name "~/.emacs.d") 0))

(defun reload-dotemacs-file ()
  "Reload .emacs file without restarting Emacs."
  (interactive)
  (load-file "~/.emacs"))

(evil-mode 1)

(require 'nasm-mode)
(require 'dired-sidebar); Enable dired-sidebar.
(require 'autopair)
(require 'git-gutter-fringe); Enable git-gutter-fringe
(require 'ace-jump-mode); Enable ace-jump-mode.
(require 'flycheck); Enable flycheck on any files.
(require 'yasnippet); start yasnippet with emacs
(require 'auto-complete)
(require 'auto-complete-config)
(require 'auto-complete-c-headers)
(require 'evil)
(require 'key-chord)

(setq sml/no-confirm-load-theme t)
(setq sml/theme 'dark)
(sml/setup)

(nyan-mode 1)

(load-theme 'gruvbox t nil)
(set-face-attribute 'flycheck-error nil :foreground "white" :background "red")
(set-face-attribute 'flycheck-warning nil :foreground "white" :background "orange")

(setq-default shell-file-name "/bin/zsh"); Set default shell

(setq backup-directory-alist `(("." . "~/.emacs.d/saves"))); Set emacs swap directory.

(when (version<= "26.0.50" emacs-version )
  (global-display-line-numbers-mode))

(setq gdb-many-windows 1)
(scroll-bar-mode -1)
(menu-bar-mode -1)
(set-cursor-color "white")
(tool-bar-mode -1); Padding configuration.
(global-hl-line-mode 1)
(set-language-environment "UTF-8")
(setq ring-bell-function 'ignore)
(setq-default font-lock-global-modes t)
(setq-default tab-width 4)
(setq-default indent-tabs-mode t)
(setq-default c-backspace-function 'backward-delete-char)
(setq-default c-basic-offset 4)
(setq-default c-default-style "linux")
(setq-default tab-stop-list '(4 8 12 16 20 24 28 32 36 40 44 48 52 56 60
								64 68 72 76 80 84 88 92 96 100 104 108 112 116 120))

(load "~/.emacs.d/my-lisp/my-tabbar.el")

(autopair-global-mode 1)

(global-git-gutter-mode t); Start git-gutter-fringe with emacs
(setq git-gutter-fr:side 'right-fringe); Set fringe to right


(global-ede-mode 1); Enable ede mode

(global-flycheck-mode)
;;;(setq flycheck-check-syntax-automatically '(save mode-enabe))

(global-undo-tree-mode); Start undo-tree with emacs.
(setq undo-tree-auto-save-history t)
(setq undo-tree-history-directory-alist '(("." . "~/.emacs.d/undo")))

(yas-global-mode 1)

;; Shell mode configuration
(add-hook 'shell-mode-hook
		  (lambda ()
			(face-remap-set-base 'comint-highlight-prompt :inherit nil)))

(defvar achead:include-directories)

(ac-config-default)
(setq ac-auto-show-menu t)
(defun my:ac-c-header-init ()
  "Initialize auto-complete-c-headers."
  (add-to-list 'ac-sources 'ac-source-c-headers)
  (add-to-list 'achead:include-directories '"/usr/include")
  (add-to-list 'achead:include-directories '"/usr/include/c++/v1/")
  )
(add-to-list 'auto-mode-alist '("\\.\\(asm\\|s\\|as\\)$" . nasm-mode))
;; add c-header in hook.
(add-hook 'c++-mode-hook 'my:ac-c-header-init)
(add-hook 'c-mode-hook 'my:ac-c-header-init)

(semantic-mode 1); turn on Semantic
(defun my:add-semantic-to-autocomplete()
  "'add-to-list' into ac-sources the ac-source-semantic plugin."
  (add-to-list 'ac-sources 'ac-source-semantic)
  )
(add-hook 'c-mode-common-hook 'my:add-semantic-to-autocomplete)
(global-semantic-idle-scheduler-mode 1)

(global-evil-leader-mode)
(evil-leader/set-leader ";")

(evil-leader/set-key
  "p" 'evil-prev-buffer
  "n" 'evil-next-buffer
  "d" 'evil-delete-buffer
  "c" 'magit-status
  "t" 'dired-sidebar-toggle-sidebar
  "s" 'ace-jump-mode)

(key-chord-mode 1)

(key-chord-define evil-insert-state-map "kj" 'evil-normal-state)

(setq evil-normal-state-modes (append evil-motion-state-modes evil-normal-state-modes))
(setq evil-motion-state-modes nil)
(setq evil-normal-state-modes (append evil-emacs-state-modes evil-normal-state-modes))
(setq evil-emacs-state-modes nil)
;; ESC to NORMAL even from emacs state
(define-key evil-emacs-state-map [escape] 'evil-normal-state)

;; don't let modes override the INSERT state (!)
(setq evil-overriding-maps nil
      evil-intercept-maps nil)

(loop for (mode . state) in '((inferior-emacs-lisp-mode . normal)
							  (neotree-mode . insert)
							  (package-menu-mode . normal)
							  (magit-mode . insert)
							  (magit-status-mode . insert)
							  (magit-commit-popup . insert)
							  (magit-branch-manager-mode . insert)
							  (nrepl-mode . normal)
							  (pylookup-mode . normal)
							  (comint-mode . normal)
							  (shell-mode . normal)
							  (git-commit-mode . normal)
							  (git-rebase-mode . normal)
							  (term-mode . normal)
							  (help-mode . normal)
							  (helm-grep-mode . normal)
							  (grep-mode . normal)
							  (bc-menu-mode . normal)
							  (rdictcc-buffer-mode . normal)
							  (dired-mode . normal)
							  (wdired-mode . normal))
	  do (evil-set-initial-state mode state))

(provide 'emacs)
;;; .emacs ends here
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   (quote
	("7f89ec3c988c398b88f7304a75ed225eaac64efa8df3638c815acc563dfd3b55" "a27c00821ccfd5a78b01e4f35dc056706dd9ede09a8b90c6955ae6a390eb1c1e" "3c83b3676d796422704082049fc38b6966bcad960f896669dfc21a7a37a748fa" "0d456bc74e0ffa4bf5b69b0b54dac5104512c324199e96fc9f3a1db10dfa31f3" "ab98c7f7a58add58293ac67bec05ae163b5d3f35cddf18753b2b073c3fcd8841" "e2fd81495089dc09d14a88f29dfdff7645f213e2c03650ac2dd275de52a513de" default)))
 '(package-selected-packages
   (quote
	(distinguished-theme nasm-mode yasnippet-snippets transpose-frame tabbar rudel org-evil magit key-chord iedit helm gruvbox-theme git-gutter-fringe flycheck evil-leader dired-sidebar autopair auto-complete-clang auto-complete-c-headers ace-jump-mode))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
