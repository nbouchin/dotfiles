"set mapleader
let mapleader = ";"
" Use vim settings, instead of vi
set nocompatible
set loadplugins
" Reindent operations (<< and >>)
set shiftwidth=4
" 4 space tab
set tabstop=4
" Causes backspace to delete 4 spaces
set softtabstop=4
" Replaces a <TAB> with spaces
" set expandtab
" Uses shiftwidth instead of tabstop at start of lines
set smarttab
set modeline
set ruler
set history=100
set nowrap
" Change terminal title
set title
" No annoying error noises
set noerrorbells visualbell t_vb=
autocmd GUIEnter * set visualbell t_vb=
" Make backspace delete lots of things
set backspace=indent,eol,start
" Show us the command we're typing
set showcmd
" Highlight matching parens
set showmatch
" Search options: incremental search, highlight search
set hlsearch
set incsearch
" Selective case insensitivity
set ignorecase
set smartcase
" Show full tags when doing search completion
set showfulltag
" Speed up macros
set lazyredraw
" No annoying error noises
set noerrorbells
" Wrap on these
set whichwrap+=<,>,[,]
" Use the cool tab complete menu
set wildmenu
set wildmode=longest,full
set wildignore+=.git,.hg,.svn,*.o,*~,*.pyc,*.egg,*.egg-info/**,*/build/**,*/dist/**,*/node_modules/**
" Allow edit buffers to be hidden
set hidden
" 1 height windows
set winminheight=1
" misc
set autowrite
" never show cursorline
set nocursorline
" never show the preview window
set completeopt-=preview
set completeopt+=longest

set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp

set clipboard=unnamedplus

if exists('+autochdir')
	set noautochdir
endif
set ttyfast
set smartcase

filetype indent on
filetype plugin on
set autoindent
set smartindent
syntax on

set encoding=utf-8

set mouse=ar

" always show statusline
set laststatus=2

" ctrlp plugin config
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'

" ===================== CUSTOM THEME =====================
set t_Co=256
colorscheme antares

" show trailing white space
set list
set lcs=tab:./
set lcs+=trail:Â·

set undofile                " Save undo's after file closes
set undodir=$HOME/.vim/undo " where to save undo histories
set undolevels=1000         " How many undos
set undoreload=10000        " number of lines to save for undo
set number
" hide coloration of found words
map <C-C> :nohlsearch<CR>

" set tmux navigator bindings
let g:tmux_navigator_no_mappings = 1
let g:tmux_navigator_save_on_switch = 2
nnoremap <silent> <M-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <M-j> :TmuxNavigateDown<cr>
nnoremap <silent> <M-k> :TmuxNavigateUp<cr>
nnoremap <silent> <M-l> :TmuxNavigateRight<cr>
nnoremap <silent> <M-\> :TmuxNavigatePrevious<cr>
nnoremap <M-H> :TmuxResizeLeft<return>
nnoremap <M-J> :TmuxResizeDown<return>
nnoremap <M-K> :TmuxResizeUp<return>
nnoremap <M-L> :TmuxResizeRight<return>
"Esc remaping.
inoremap kj <esc>
set <M-h>=h
set <M-j>=j
set <M-k>=k
set <M-l>=l

"ale settings
"ale c linter settings
let g:ale_c_gcc_options="-Wall -Wextra -Werror"
let g:ale_c_gcc_executable="clang"

"autocomplete
nnoremap <c-space> <NOP>
let g:neocomplete#enable_at_startup = 1
let g:SuperTabDefaultCompletionType = "<c-n>"
let g:SuperTabMappingForward = "<NOP>"
let g:SuperTabMappingForward = "<NOP>"
